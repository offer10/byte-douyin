// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/feed.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeedRequest struct {
	LatestTime           int64    `protobuf:"varint,1,opt,name=latest_time,json=latestTime,proto3" json:"latest_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedRequest) Reset()         { *m = FeedRequest{} }
func (m *FeedRequest) String() string { return proto.CompactTextString(m) }
func (*FeedRequest) ProtoMessage()    {}
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2703538cd72e431, []int{0}
}

func (m *FeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedRequest.Unmarshal(m, b)
}
func (m *FeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedRequest.Marshal(b, m, deterministic)
}
func (m *FeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedRequest.Merge(m, src)
}
func (m *FeedRequest) XXX_Size() int {
	return xxx_messageInfo_FeedRequest.Size(m)
}
func (m *FeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedRequest proto.InternalMessageInfo

func (m *FeedRequest) GetLatestTime() int64 {
	if m != nil {
		return m.LatestTime
	}
	return 0
}

type FeedResponse struct {
	List                 []*Video `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedResponse) Reset()         { *m = FeedResponse{} }
func (m *FeedResponse) String() string { return proto.CompactTextString(m) }
func (*FeedResponse) ProtoMessage()    {}
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2703538cd72e431, []int{1}
}

func (m *FeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedResponse.Unmarshal(m, b)
}
func (m *FeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedResponse.Marshal(b, m, deterministic)
}
func (m *FeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedResponse.Merge(m, src)
}
func (m *FeedResponse) XXX_Size() int {
	return xxx_messageInfo_FeedResponse.Size(m)
}
func (m *FeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedResponse proto.InternalMessageInfo

func (m *FeedResponse) GetList() []*Video {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*FeedRequest)(nil), "pb.FeedRequest")
	proto.RegisterType((*FeedResponse)(nil), "pb.FeedResponse")
}

func init() {
	proto.RegisterFile("pb/feed.proto", fileDescriptor_f2703538cd72e431)
}

var fileDescriptor_f2703538cd72e431 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x48, 0xd2, 0x4f,
	0x4b, 0x4d, 0x4d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0x12, 0x28,
	0x48, 0xd2, 0x2f, 0x28, 0x4d, 0xca, 0xc9, 0x2c, 0xce, 0x80, 0x88, 0x2a, 0xe9, 0x71, 0x71, 0xbb,
	0xa5, 0xa6, 0xa6, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xc9, 0x73, 0x71, 0xe7, 0x24,
	0x96, 0xa4, 0x16, 0x97, 0xc4, 0x97, 0x64, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07,
	0x71, 0x41, 0x84, 0x42, 0x32, 0x73, 0x53, 0x95, 0x74, 0xb9, 0x78, 0x20, 0xea, 0x8b, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x85, 0x64, 0xb9, 0x58, 0x7c, 0x32, 0x8b, 0x4b, 0x24, 0x18, 0x15, 0x98, 0x35,
	0xb8, 0x8d, 0x38, 0xf5, 0x0a, 0x92, 0xf4, 0xc2, 0x32, 0x53, 0x52, 0xf3, 0x83, 0xc0, 0xc2, 0x46,
	0x16, 0x10, 0xe3, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x34, 0xb9, 0x58, 0x40, 0x5c,
	0x21, 0x7e, 0x90, 0x3a, 0x24, 0x7b, 0xa5, 0x04, 0x10, 0x02, 0x10, 0x83, 0x9d, 0xd8, 0xa2, 0x58,
	0xf4, 0xac, 0x0b, 0x92, 0x92, 0xd8, 0xc0, 0xee, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xdd,
	0xd0, 0xdc, 0x57, 0xce, 0x00, 0x00, 0x00,
}
